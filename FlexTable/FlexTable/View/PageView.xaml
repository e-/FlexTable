<UserControl
    x:Class="FlexTable.View.PageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FlexTable.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d3view="using:d3.View"
    xmlns:util="using:FlexTable.Util"
    xmlns:crayon="using:FlexTable.Crayon.Chart"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Loaded="UserControl_Loaded"
    x:Name="UserControl"
    >

    <UserControl.Resources>
        <Style TargetType="StackPanel" x:Key="TitleWrapperStyle">
            <Setter Property="Height" Value="90" />
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style TargetType="TextBlock" x:Key="TitleStyle">
            <Setter Property="FontSize" Value="42" />
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style TargetType="Border" x:Key="ParagraphLabelBorderStyle">
            <Setter Property="CornerRadius" Value="14" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="9 5" />
            <Setter Property="Margin" Value="5 0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style TargetType="TextBlock" x:Key="ParagraphLabelTextBlockStyle">
            <Setter Property="FontSize" Value="14" />
        </Style>
        
        <util:BooleanToVisibilityConverter x:Name="BooleanToVisibilityConverter" />
        <util:BooleanToInvertedVisibilityConverter x:Name="BooleanToInvertedVisibilityConverter" />

        <Storyboard x:Name="ShowStoryboardElement">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.3"
                             Storyboard.TargetName="Wrapper" Storyboard.TargetProperty="Opacity" To="1" EnableDependentAnimation="True"
                             BeginTime="00:00:00.5"/>
        </Storyboard>
        
        <Storyboard x:Name="MoveToSelectedPositionStoryboard">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.7"
                             Storyboard.TargetName="UserControl" Storyboard.TargetProperty="(Canvas.Top)" To="0">
            </DoubleAnimation>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.7"
                             Storyboard.TargetName="ChartWrapper" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
        </Storyboard>
        
        <Storyboard x:Name="MoveToDefaultPositionStoryboard">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.7"
                             Storyboard.TargetName="UserControl" Storyboard.TargetProperty="(Canvas.Top)" To="{Binding MainPageViewModel.PageOffset}">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="UndoDimmingStoryboard">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.4" BeginTime="00:00:00.2"
                             Storyboard.TargetName="ChartWrapper" Storyboard.TargetProperty="Opacity" To="0.1">
            </DoubleAnimation>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UndoMessage"
                                           Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.4" BeginTime="00:00:00.2"
                             Storyboard.TargetName="UndoMessage" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="EmptyDimmingStoryboard">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.2"
                             Storyboard.TargetName="ChartWrapper" Storyboard.TargetProperty="Opacity" To="0">
            </DoubleAnimation>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChartWrapper"
                                           Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        
        <Storyboard x:Name="CancelDimmingboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChartWrapper"
                                           Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.2" 
                             Storyboard.TargetName="ChartWrapper" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UndoMessage"
                                           Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="Collapsed" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.2"
                             Storyboard.TargetName="UndoMessage" Storyboard.TargetProperty="Opacity" To="0">
            </DoubleAnimation>
        </Storyboard>
        
        <Storyboard x:Name="ShowTopToolBar">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.2"
                             Storyboard.TargetName="TopToolBar" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="HideTopToolBar">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.4"
                             Storyboard.TargetName="TopToolBar" Storyboard.TargetProperty="Opacity" To="0">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="ShowBottomToolBar">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.4"
                             Storyboard.TargetName="BottomToolBar" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="HideBottomToolBar">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.4"
                             Storyboard.TargetName="BottomToolBar" Storyboard.TargetProperty="Opacity" To="0">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="ShowSelectionIndicatorStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicator"
                                           Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicatorTemporaryTransform"
                                           Storyboard.TargetProperty="X">
                <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.3"
                             Storyboard.TargetName="SelectionIndicator" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="HideSelectionIndicatorStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicator"
                                           Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="Collapsed" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.3"
                             Storyboard.TargetName="SelectionIndicator" Storyboard.TargetProperty="Opacity" To="0">
            </DoubleAnimation>
        </Storyboard>
        
        <Storyboard x:Name="ResetSelectionIndicatorPositionStoryboard">
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.3"
                             Storyboard.TargetName="SelectionIndicator" Storyboard.TargetProperty="Opacity" To="1">
            </DoubleAnimation>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.3"
                             Storyboard.TargetName="SelectionIndicatorTemporaryTransform" Storyboard.TargetProperty="X" To="0">
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Name="FlashStoryboard">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Wrapper"
                                           Storyboard.TargetProperty="(StackPanel.Background).(SolidColorBrush.Color)">
                <DiscreteColorKeyFrame KeyTime="0" Value="White" />
                <DiscreteColorKeyFrame KeyTime="0:0:0.3" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource QuarticEaseInOut}" Duration="00:00:00.3"
                             Storyboard.TargetName="ChartWrapper" Storyboard.TargetProperty="Opacity" From="0.6" To="1">
            </DoubleAnimation>
        </Storyboard>
        
        <Color x:Key="LabelForegroundColor">#333</Color>
        <Color x:Key="LabelBackgroundColor">#fff</Color>
        <Color x:Key="ActivatedLabelForegroundColor">#000</Color>
        <Color x:Key="ActivatedLabelBackgroundColor">#ddd</Color>
        <x:String x:Key="TooManyElementsWarningString">There are too many visual elements. Some elements may be hidden.</x:String>
        <Style x:Key="TooManyElementsWarningStyle" TargetType="TextBlock">
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="0 -20 0 0" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Width" Value="{StaticResource ParagraphWidth}" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform Y="3" />
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <StackPanel Opacity="0" x:Name="Wrapper"
                Background="Transparent"
                ManipulationMode="TranslateY" 
                ManipulationDelta="Wrapper_ManipulationDelta"
                ManipulationCompleted="Wrapper_ManipulationCompleted">
        <Grid>
            <!-- Visibility="{Binding IsPreviewVisible, Converter={StaticResource BooleanToVisibilityConverter}}" -->
            <StackPanel Height="{Binding MainPageViewModel.PageHeight}"
                        x:Name="ChartWrapper" Padding="20" Background="White">
                <ScrollViewer HorizontalScrollBarVisibility="Hidden" HorizontalScrollMode="Auto" 
                              VerticalScrollBarVisibility="Hidden" VerticalScrollMode="Disabled"
                              x:Name="Carousel" Background="White"
                              Width="{StaticResource ParagraphWidth}"
                              ViewChanged="Carousel_ViewChanged" ViewChanging="Carousel_ViewChanging">
                    <Canvas x:Name="ParagraphContainerCanvasElement" Height="{StaticResource ParagraphContainerHeight}"
                            ManipulationMode="TranslateY,System"
                              ManipulationDelta="Carousel_ManipulationDelta"
                              ManipulationCompleted="Carousel_ManipulationCompleted"
                            >
                        <StackPanel Visibility="{Binding IsBarChartVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Bar Chart" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="BarChartTitleElement"></StackPanel>
                            <TextBlock Style="{StaticResource TooManyElementsWarningStyle}" Visibility="{Binding IsBarChartWarningVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Run FontFamily="FontAwesome" Foreground="#CC0000">&#xf071;</Run>
                                <Run Text="{StaticResource TooManyElementsWarningString}"></Run>
                            </TextBlock>
                            <crayon:BarChart x:Name="BarChartElement" Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}" 
                                             IsHitTestVisible="False" Tag="Bar Chart"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsLineChartVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Line Chart" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="LineChartTitleElement"></StackPanel>
                            <TextBlock Style="{StaticResource TooManyElementsWarningStyle}" Visibility="{Binding IsLineChartWarningVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Run FontFamily="FontAwesome" Foreground="#CC0000">&#xf071;</Run>
                                <Run Text="{StaticResource TooManyElementsWarningString}"></Run>
                            </TextBlock>
                            <crayon:LineChart x:Name="LineChartElement" Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}" 
                                              IsHitTestVisible="False" Tag="Line Chart"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsDistributionVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Distribution" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="DistributionViewTitleElement"></StackPanel>
                            <local:DistributionView x:Name="DistributionViewElement" Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}"
                                                    IsHitTestVisible="False" Tag="Distribution"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsDescriptiveStatisticsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Statistics" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="DescriptiveStatisticsTitleElement"></StackPanel>
                            <local:DescriptiveStatisticsView x:Name="DescriptiveStatisticsViewElement" Width="{StaticResource ParagraphWidth}" 
                                                             Height="{StaticResource ParagraphHeight}" Tag="Statistics"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsGroupedBarChartVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Grouped Bar Chart" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="GroupedBarChartTitleElement"></StackPanel>
                            <TextBlock Style="{StaticResource TooManyElementsWarningStyle}" Visibility="{Binding IsGroupedBarChartWarningVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Run FontFamily="FontAwesome" Foreground="#CC0000">&#xf071;</Run>
                                <Run Text="{StaticResource TooManyElementsWarningString}"></Run>
                            </TextBlock>
                            <crayon:GroupedBarChart x:Name="GroupedBarChartElement" Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}" 
                                                    IsHitTestVisible="False" Tag="Grouped Bar Chart"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsScatterplotVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Scatterplot" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="ScatterplotTitleElement"></StackPanel>
                            <TextBlock Style="{StaticResource TooManyElementsWarningStyle}" Visibility="{Binding IsScatterplotWarningVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Run FontFamily="FontAwesome" Foreground="#CC0000">&#xf071;</Run>
                                <Run Text="{StaticResource TooManyElementsWarningString}"></Run>
                            </TextBlock>
                            <crayon:Scatterplot x:Name="ScatterplotElement" Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}" 
                                                IsHitTestVisible="False" Tag="Scatterplot"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsPivotTableVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="Pivot Table" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="PivotTableTitleElement"></StackPanel>
                            <local:PivotTableView x:Name="PivotTableViewElement" VerticalAlignment="Center"
                                                  Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}"
                                                  Tag="Pivot Table"
                                                  ></local:PivotTableView>
                        </StackPanel>

                        <StackPanel Visibility="{Binding IsCorrelationStatisticsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="CorrStatistics" Background="Transparent">
                            <StackPanel Style="{StaticResource TitleWrapperStyle}" x:Name="CorrelationStatisticsTitleElement"></StackPanel>
                            <local:CorrelationStatisticsView x:Name="CorrelationStatisticsViewElement" Width="{StaticResource ParagraphWidth}" Height="{StaticResource ParagraphHeight}"
                                                             Tag="CorrStatistics"/>
                        </StackPanel>
                    </Canvas>
                </ScrollViewer>
                <StackPanel x:Name="ParagraphLabelContainer" Height="50" Orientation="Horizontal" HorizontalAlignment="Center"></StackPanel>
            </StackPanel>

            <Border Background="#ddd" CornerRadius="5" HorizontalAlignment="Right" VerticalAlignment="Top" Height="40" Margin="0 5 0 5"
                    x:Name="SelectionIndicator"
                    ManipulationMode="TranslateX" ManipulationDelta="SelectionIndicator_ManipulationDelta"
                    ManipulationCompleted="SelectionIndicator_ManipulationCompleted"
                    Visibility="Collapsed" Opacity="0">
                <Border.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform Y="70" X="-50" />
                        <TranslateTransform x:Name="SelectionIndicatorTemporaryTransform" />
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                        <ColumnDefinition Width="180"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Border Background="#eee" CornerRadius="5" Grid.ColumnSpan="2">
                        <Border.RenderTransform>
                            <TranslateTransform X="0" Y="-1" />
                        </Border.RenderTransform>
                    </Border>
                    <Border Grid.Column="0" Background="{StaticResource HighlightBrush1}" CornerRadius="5">
                        <Button Style="{StaticResource FlatIconButtonStyle}" x:Name="SelectionFilterButton"
                                FontSize="24" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="FontAwesome"
                                Tapped="SelectionFilterButton_Tapped">
                            &#xf0b0;
                            <!--&#xf090;-->
                        </Button>
                    </Border>
                    <TextBlock FontSize="16" Grid.Column="1" VerticalAlignment="Center" 
                               Margin="10 0 0 0" Width="180">
                        <Run x:Name="SelectedRowCountIndicator" FontWeight="Bold" Foreground="{StaticResource HighlightBrush1}"></Run>
                        <Run x:Name="SelectionMessage"/>
                    </TextBlock>
                </Grid>
            </Border>
            
            <Grid HorizontalAlignment="Right" VerticalAlignment="Top" x:Name="TopToolBar" Opacity="0">
                <Grid.RenderTransform>
                    <TranslateTransform Y="-8" />
                </Grid.RenderTransform>
                <Button Style="{StaticResource TopTriangleIconButtonStyle}" Tapped="Select_Tapped" Holding="Button_Holding">&#xf00c;</Button>
                <!--<Button Style="{StaticResource FlatIconButtonStyle}" Margin="0 0 5 0" Tapped="Clipboard_Tapped">&#xf0ea;</Button>-->
            </Grid>

            <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" x:Name="BottomToolBar" Opacity="0">
                <Button Style="{StaticResource BottomTriangleIconButtonStyle}" Tapped="Unselect_Tapped" Holding="Button_Holding">&#xf00d;</Button>
                <!--<Button Style="{StaticResource FlatIconButtonStyle}" Margin="0 0 5 0" Tapped="Clipboard_Tapped">&#xf0ea;</Button>-->
                <!--<Button Style="{StaticResource FlatIconButtonStyle}" Margin="0 0 5 0">&#xf0b2;</Button>-->
            </Grid>

            <Border Height="{Binding MainPageViewModel.PageHeight}" Opacity="0" Visibility="Collapsed" Padding="20" 
                    Background="#33FFFFFF" Tapped="Undo_Tapped" x:Name="UndoMessage">
                <StackPanel VerticalAlignment="Center">
                    <TextBlock FontSize="25" TextAlignment="Center"  Visibility="{Binding IsPrimaryUndoMessageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Run FontFamily="FontAwesome">&#xf0e2;</Run>
                        <Run>Tap to undo.</Run>
                    </TextBlock>
                    <TextBlock FontSize="25" TextAlignment="Center"  Visibility="{Binding IsPrimaryUndoMessageVisible, Converter={StaticResource BooleanToInvertedVisibilityConverter}}">
                        <Run FontFamily="FontAwesome">&#xf062;</Run>
                        <Run>Swipe up to undo.</Run>
                    </TextBlock>
                </StackPanel>
            </Border>
            <Border Height="{Binding MainPageViewModel.PageHeight}" Visibility="{Binding IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Padding="20">
                <StackPanel VerticalAlignment="Center">
                    <TextBlock FontSize="25" TextAlignment="Center">
                        <Run FontFamily="FontAwesome">&#xf25a;</Run>
                        <Run>Select a column to preview.</Run>
                    </TextBlock>
                </StackPanel>
            </Border>
        </Grid>
        <Image Source="ms-appx:///Assets/horizontal-separator.png" Width="{Binding MainPageViewModel.PageWidth}" Height="8"></Image>
    </StackPanel>
</UserControl>
